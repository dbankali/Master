<apex:page >
<apex:form >
<apex:stylesheet value="{!URLFOR($Resource.extjs21,'/resources/css/ext-all.css')}"></apex:stylesheet>
<apex:includeScript value="{!URLFOR($Resource.extjs21,'/adapter/ext/ext-base.js')}"/>
<apex:includeScript value="{!URLFOR($Resource.extjs21,'/ext-all.js')}"/>
<script type="text/javascript">
Ext.onReady(function(){
Ext.QuickTips.init();

function formatDate(value){
return value ? value.dateFormat('M d, Y') : '';
};
// shorthand alias
var fm = Ext.form;
alert("XData"+xarrData);       
var myData=[['BestBuy','2'],['walmart','4']];
alert("myData"+ myData);
// the column model has information about grid columns
// dataIndex maps the column to the specific data field in
// the data store (created below)
var cm = new Ext.grid.ColumnModel([
{
id:'common',
header: "Common Name",
dataIndex: 'common',
fixed:true,
width: 10,
editor: new fm.TextField({
allowBlank: false
})
},{
header: "Price",
dataIndex: 'price',
width: 70,
align: 'right',
renderer: 'usMoney',
editor: new fm.NumberField({
allowBlank: false,
allowNegative: false,
maxValue: 100000
})
}
]);

// by default columns are sortable
cm.defaultSortable = true;

// create the Data Store
var store = new Ext.data.SimpleStore({
   fields: [
           {name: 'common'},
           {name: 'price'}
           ]
});
alert(myData);
store.loadData(myData);
// create the editor grid
var grid = new Ext.grid.EditorGridPanel({
store: store,
cm: cm,
renderTo: 'editor-grid',
width:200,
height:300,
autoExpandColumn:'common',
title:'Edit Plants?',
frame:true,
clicksToEdit:1,

tbar: [{
text: 'Add Plant'
}]
});
});

Ext.grid.CheckColumn = function(config){
Ext.apply(this, config);
if(!this.id){
this.id = Ext.id();
}
this.renderer = this.renderer.createDelegate(this);
};

Ext.grid.CheckColumn.prototype ={
init : function(grid){
this.grid = grid;
this.grid.on('render', function(){
var view = this.grid.getView();
view.mainBody.on('mousedown', this.onMouseDown, this);
}, this);
},

onMouseDown : function(e, t){
if(t.className && t.className.indexOf('x-grid3-cc-'+this.id) != -1){
e.stopEvent();
var index = this.grid.getView().findRowIndex(t);
var record = this.grid.store.getAt(index);
record.set(this.dataIndex, !record.data[this.dataIndex]);
}
},

renderer : function(v, p, record){
p.css += ' x-grid3-check-col-td';
return '<div class="x-grid3-check-col'+(v?'-on':'')+' x-grid3-cc-'+this.id+'">&#160;</div>';
}
};
</script>

<!-- you must define the select box here, as the custom editor for the 'Light' column will require it -->

<div id="editor-grid"></div>
</apex:form>  
</apex:page>